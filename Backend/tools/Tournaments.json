{
    "abi":
    [
        {
            "inputs": [],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "inputs": [
                {
                    "internalType": "string",
                    "name": "_name",
                    "type": "string"
                },
                {
                    "components": [
                        {
                            "internalType": "string",
                            "name": "Player1Name",
                            "type": "string"
                        },
                        {
                            "internalType": "string",
                            "name": "Player2Name",
                            "type": "string"
                        },
                        {
                            "internalType": "uint256",
                            "name": "Player1Score",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "Player2Score",
                            "type": "uint256"
                        },
                        {
                            "internalType": "string",
                            "name": "Winner",
                            "type": "string"
                        }
                    ],
                    "internalType": "struct Tornaments_database.Match[]",
                    "name": "_matches",
                    "type": "tuple[]"
                }
            ],
            "name": "createTournament",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_id",
                    "type": "uint256"
                }
            ],
            "name": "getTournament",
            "outputs": [
                {
                    "components": [
                        {
                            "internalType": "string",
                            "name": "name",
                            "type": "string"
                        },
                        {
                            "internalType": "string",
                            "name": "Winner",
                            "type": "string"
                        },
                        {
                            "internalType": "uint256",
                            "name": "id",
                            "type": "uint256"
                        },
                        {
                            "components": [
                                {
                                    "internalType": "string",
                                    "name": "Player1Name",
                                    "type": "string"
                                },
                                {
                                    "internalType": "string",
                                    "name": "Player2Name",
                                    "type": "string"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "Player1Score",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "Player2Score",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "string",
                                    "name": "Winner",
                                    "type": "string"
                                }
                            ],
                            "internalType": "struct Tornaments_database.Match[]",
                            "name": "matches",
                            "type": "tuple[]"
                        }
                    ],
                    "internalType": "struct Tornaments_database.Tournament",
                    "name": "",
                    "type": "tuple"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getTournamentCount",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "string",
                    "name": "_name",
                    "type": "string"
                }
            ],
            "name": "getTournaments",
            "outputs": [
                {
                    "components": [
                        {
                            "internalType": "string",
                            "name": "name",
                            "type": "string"
                        },
                        {
                            "internalType": "string",
                            "name": "Winner",
                            "type": "string"
                        },
                        {
                            "internalType": "uint256",
                            "name": "id",
                            "type": "uint256"
                        },
                        {
                            "components": [
                                {
                                    "internalType": "string",
                                    "name": "Player1Name",
                                    "type": "string"
                                },
                                {
                                    "internalType": "string",
                                    "name": "Player2Name",
                                    "type": "string"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "Player1Score",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "Player2Score",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "string",
                                    "name": "Winner",
                                    "type": "string"
                                }
                            ],
                            "internalType": "struct Tornaments_database.Match[]",
                            "name": "matches",
                            "type": "tuple[]"
                        }
                    ],
                    "internalType": "struct Tornaments_database.Tournament[]",
                    "name": "",
                    "type": "tuple[]"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "tournamentCount",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "name": "tournaments",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "name",
                    "type": "string"
                },
                {
                    "internalType": "string",
                    "name": "Winner",
                    "type": "string"
                },
                {
                    "internalType": "uint256",
                    "name": "id",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        }
    ],
    "bytecode": "6080604052348015600e575f80fd5b505f600181905550611a27806100235f395ff3fe608060405234801561000f575f80fd5b5060043610610060575f3560e01c8063078c51f0146100645780631a5bd7fc146100825780634db5ba93146100b25780636e2b2c7c146100ce5780637503e1b7146100ec5780637be1d25e1461011e575b5f80fd5b61006c61014e565b6040516100799190610ced565b60405180910390f35b61009c60048036038101906100979190610d41565b610157565b6040516100a99190610f95565b60405180910390f35b6100cc60048036038101906100c791906112a8565b61051c565b005b6100d66106d3565b6040516100e39190610ced565b60405180910390f35b61010660048036038101906101019190610d41565b6106d9565b60405161011593929190611366565b60405180910390f35b610138600480360381019061013391906113a9565b610819565b6040516101459190611519565b60405180910390f35b5f600154905090565b61015f610cae565b60015482106101a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019a90611583565b60405180910390fd5b5f82815481106101b6576101b56115a1565b5b905f5260205f2090600402016040518060800160405290815f820180546101dc906115fb565b80601f0160208091040260200160405190810160405280929190818152602001828054610208906115fb565b80156102535780601f1061022a57610100808354040283529160200191610253565b820191905f5260205f20905b81548152906001019060200180831161023657829003601f168201915b5050505050815260200160018201805461026c906115fb565b80601f0160208091040260200160405190810160405280929190818152602001828054610298906115fb565b80156102e35780601f106102ba576101008083540402835291602001916102e3565b820191905f5260205f20905b8154815290600101906020018083116102c657829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020015f905b8282101561050d578382905f5260205f2090600502016040518060a00160405290815f8201805461034a906115fb565b80601f0160208091040260200160405190810160405280929190818152602001828054610376906115fb565b80156103c15780601f10610398576101008083540402835291602001916103c1565b820191905f5260205f20905b8154815290600101906020018083116103a457829003601f168201915b505050505081526020016001820180546103da906115fb565b80601f0160208091040260200160405190810160405280929190818152602001828054610406906115fb565b80156104515780601f1061042857610100808354040283529160200191610451565b820191905f5260205f20905b81548152906001019060200180831161043457829003601f168201915b50505050508152602001600282015481526020016003820154815260200160048201805461047e906115fb565b80601f01602080910402602001604051908101604052809291908181526020018280546104aa906115fb565b80156104f55780601f106104cc576101008083540402835291602001916104f5565b820191905f5260205f20905b8154815290600101906020018083116104d857829003601f168201915b5050505050815250508152602001906001019061031a565b50505050815250509050919050565b5f8060018160018154018082558091505003905f5260205f209060040201905082815f01908161054c91906117c8565b505f60405180602001604052805f81525090505f5b8351811015610698575f8360030160018160018154018082558091505003905f5260205f20906005020190508482815181106105a05761059f6115a1565b5b60200260200101515f0151815f0190816105ba91906117c8565b508482815181106105ce576105cd6115a1565b5b6020026020010151602001518160010190816105ea91906117c8565b508482815181106105fe576105fd6115a1565b5b6020026020010151604001518160020181905550848281518110610625576106246115a1565b5b602002602001015160600151816003018190555084828151811061064c5761064b6115a1565b5b60200260200101516080015181600401908161066891906117c8565b5084828151811061067c5761067b6115a1565b5b6020026020010151608001519250508080600101915050610561565b506001548260020181905550808260010190816106b591906117c8565b5060015f8154809291906106c8906118c4565b919050555050505050565b60015481565b5f81815481106106e7575f80fd5b905f5260205f2090600402015f91509050805f018054610706906115fb565b80601f0160208091040260200160405190810160405280929190818152602001828054610732906115fb565b801561077d5780601f106107545761010080835404028352916020019161077d565b820191905f5260205f20905b81548152906001019060200180831161076057829003601f168201915b505050505090806001018054610792906115fb565b80601f01602080910402602001604051908101604052809291908181526020018280546107be906115fb565b80156108095780601f106107e057610100808354040283529160200191610809565b820191905f5260205f20905b8154815290600101906020018083116107ec57829003601f168201915b5050505050908060020154905083565b60605f60015467ffffffffffffffff81111561083857610837610fbd565b5b60405190808252806020026020018201604052801561087157816020015b61085e610cae565b8152602001906001900390816108565790505b5090505f805b600154811015610ca057846040516020016108929190611945565b604051602081830303815290604052805190602001205f82815481106108bb576108ba6115a1565b5b905f5260205f2090600402015f016040516020016108d991906119db565b6040516020818303038152906040528051906020012003610c93575f8181548110610907576109066115a1565b5b905f5260205f2090600402016040518060800160405290815f8201805461092d906115fb565b80601f0160208091040260200160405190810160405280929190818152602001828054610959906115fb565b80156109a45780601f1061097b576101008083540402835291602001916109a4565b820191905f5260205f20905b81548152906001019060200180831161098757829003601f168201915b505050505081526020016001820180546109bd906115fb565b80601f01602080910402602001604051908101604052809291908181526020018280546109e9906115fb565b8015610a345780601f10610a0b57610100808354040283529160200191610a34565b820191905f5260205f20905b815481529060010190602001808311610a1757829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020015f905b82821015610c5e578382905f5260205f2090600502016040518060a00160405290815f82018054610a9b906115fb565b80601f0160208091040260200160405190810160405280929190818152602001828054610ac7906115fb565b8015610b125780601f10610ae957610100808354040283529160200191610b12565b820191905f5260205f20905b815481529060010190602001808311610af557829003601f168201915b50505050508152602001600182018054610b2b906115fb565b80601f0160208091040260200160405190810160405280929190818152602001828054610b57906115fb565b8015610ba25780601f10610b7957610100808354040283529160200191610ba2565b820191905f5260205f20905b815481529060010190602001808311610b8557829003601f168201915b505050505081526020016002820154815260200160038201548152602001600482018054610bcf906115fb565b80601f0160208091040260200160405190810160405280929190818152602001828054610bfb906115fb565b8015610c465780601f10610c1d57610100808354040283529160200191610c46565b820191905f5260205f20905b815481529060010190602001808311610c2957829003601f168201915b50505050508152505081526020019060010190610a6b565b5050505081525050838381518110610c7957610c786115a1565b5b60200260200101819052508180610c8f906118c4565b9250505b8080600101915050610877565b508082528192505050919050565b604051806080016040528060608152602001606081526020015f8152602001606081525090565b5f819050919050565b610ce781610cd5565b82525050565b5f602082019050610d005f830184610cde565b92915050565b5f604051905090565b5f80fd5b5f80fd5b610d2081610cd5565b8114610d2a575f80fd5b50565b5f81359050610d3b81610d17565b92915050565b5f60208284031215610d5657610d55610d0f565b5b5f610d6384828501610d2d565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610dae82610d6c565b610db88185610d76565b9350610dc8818560208601610d86565b610dd181610d94565b840191505092915050565b610de581610cd5565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f60a083015f8301518482035f860152610e2e8282610da4565b91505060208301518482036020860152610e488282610da4565b9150506040830151610e5d6040860182610ddc565b506060830151610e706060860182610ddc565b5060808301518482036080860152610e888282610da4565b9150508091505092915050565b5f610ea08383610e14565b905092915050565b5f602082019050919050565b5f610ebe82610deb565b610ec88185610df5565b935083602082028501610eda85610e05565b805f5b85811015610f155784840389528151610ef68582610e95565b9450610f0183610ea8565b925060208a01995050600181019050610edd565b50829750879550505050505092915050565b5f608083015f8301518482035f860152610f418282610da4565b91505060208301518482036020860152610f5b8282610da4565b9150506040830151610f706040860182610ddc565b5060608301518482036060860152610f888282610eb4565b9150508091505092915050565b5f6020820190508181035f830152610fad8184610f27565b905092915050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b610ff382610d94565b810181811067ffffffffffffffff8211171561101257611011610fbd565b5b80604052505050565b5f611024610d06565b90506110308282610fea565b919050565b5f67ffffffffffffffff82111561104f5761104e610fbd565b5b61105882610d94565b9050602081019050919050565b828183375f83830152505050565b5f61108561108084611035565b61101b565b9050828152602081018484840111156110a1576110a0610fb9565b5b6110ac848285611065565b509392505050565b5f82601f8301126110c8576110c7610fb5565b5b81356110d8848260208601611073565b91505092915050565b5f67ffffffffffffffff8211156110fb576110fa610fbd565b5b602082029050602081019050919050565b5f80fd5b5f80fd5b5f80fd5b5f60a0828403121561112d5761112c611110565b5b61113760a061101b565b90505f82013567ffffffffffffffff81111561115657611155611114565b5b611162848285016110b4565b5f83015250602082013567ffffffffffffffff81111561118557611184611114565b5b611191848285016110b4565b60208301525060406111a584828501610d2d565b60408301525060606111b984828501610d2d565b606083015250608082013567ffffffffffffffff8111156111dd576111dc611114565b5b6111e9848285016110b4565b60808301525092915050565b5f611207611202846110e1565b61101b565b9050808382526020820190506020840283018581111561122a5761122961110c565b5b835b8181101561127157803567ffffffffffffffff81111561124f5761124e610fb5565b5b80860161125c8982611118565b8552602085019450505060208101905061122c565b5050509392505050565b5f82601f83011261128f5761128e610fb5565b5b813561129f8482602086016111f5565b91505092915050565b5f80604083850312156112be576112bd610d0f565b5b5f83013567ffffffffffffffff8111156112db576112da610d13565b5b6112e7858286016110b4565b925050602083013567ffffffffffffffff81111561130857611307610d13565b5b6113148582860161127b565b9150509250929050565b5f82825260208201905092915050565b5f61133882610d6c565b611342818561131e565b9350611352818560208601610d86565b61135b81610d94565b840191505092915050565b5f6060820190508181035f83015261137e818661132e565b90508181036020830152611392818561132e565b90506113a16040830184610cde565b949350505050565b5f602082840312156113be576113bd610d0f565b5b5f82013567ffffffffffffffff8111156113db576113da610d13565b5b6113e7848285016110b4565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f608083015f8301518482035f8601526114338282610da4565b9150506020830151848203602086015261144d8282610da4565b91505060408301516114626040860182610ddc565b506060830151848203606086015261147a8282610eb4565b9150508091505092915050565b5f6114928383611419565b905092915050565b5f602082019050919050565b5f6114b0826113f0565b6114ba81856113fa565b9350836020820285016114cc8561140a565b805f5b8581101561150757848403895281516114e88582611487565b94506114f38361149a565b925060208a019950506001810190506114cf565b50829750879550505050505092915050565b5f6020820190508181035f83015261153181846114a6565b905092915050565b7f546f75726e616d656e7420646f6573206e6f74206578697374000000000000005f82015250565b5f61156d60198361131e565b915061157882611539565b602082019050919050565b5f6020820190508181035f83015261159a81611561565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061161257607f821691505b602082108103611625576116246115ce565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026116877fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261164c565b611691868361164c565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6116cc6116c76116c284610cd5565b6116a9565b610cd5565b9050919050565b5f819050919050565b6116e5836116b2565b6116f96116f1826116d3565b848454611658565b825550505050565b5f90565b61170d611701565b6117188184846116dc565b505050565b5b8181101561173b576117305f82611705565b60018101905061171e565b5050565b601f821115611780576117518161162b565b61175a8461163d565b81016020851015611769578190505b61177d6117758561163d565b83018261171d565b50505b505050565b5f82821c905092915050565b5f6117a05f1984600802611785565b1980831691505092915050565b5f6117b88383611791565b9150826002028217905092915050565b6117d182610d6c565b67ffffffffffffffff8111156117ea576117e9610fbd565b5b6117f482546115fb565b6117ff82828561173f565b5f60209050601f831160018114611830575f841561181e578287015190505b61182885826117ad565b86555061188f565b601f19841661183e8661162b565b5f5b8281101561186557848901518255600182019150602085019450602081019050611840565b86831015611882578489015161187e601f891682611791565b8355505b6001600288020188555050505b505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6118ce82610cd5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611900576118ff611897565b5b600182019050919050565b5f81905092915050565b5f61191f82610d6c565b611929818561190b565b9350611939818560208601610d86565b80840191505092915050565b5f6119508284611915565b915081905092915050565b5f8154611967816115fb565b611971818661190b565b9450600182165f811461198b57600181146119a0576119d2565b60ff19831686528115158202860193506119d2565b6119a98561162b565b5f5b838110156119ca578154818901526001820191506020810190506119ab565b838801955050505b50505092915050565b5f6119e6828461195b565b91508190509291505056fea26469706673582212202af99ec5f520c4d50778f909ae69f59ba8045dbe60d9f79cc14626bba6afac5b64736f6c634300081a0033"
}