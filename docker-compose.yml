version: '3.8'

services:
  backend:
    build: ./Backend
    image: backend
    container_name: backend
    expose:
      - "8000"
    volumes:
      - ./Backend:/app
    env_file:
      - .env
    networks:
      - transcendence
    depends_on:
      postgres:
        condition: service_healthy
      blockchain:
        condition: service_healthy
    restart: unless-stopped

  postgres:
    build: ./Infrastructure/postgres
    image: postgres
    container_name: postgres
    expose:
      - "5432"
    volumes:
      - postgres:/var/lib/postgresql/data
    env_file:
      - .env
    networks:
      - transcendence
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  blockchain:
    build: ./Blockchain
    image: blockchain
    container_name: blockchain
    expose:
      - "8545"
    ports:
      - "8545:8545"
    volumes:
      - ./blockchain/database:/etc/ethereum/Pong
    networks:
      - transcendence
    healthcheck:
      test: ["CMD", "ping", "-c", "1", "localhost:8545"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  nginx:
    build: ./Infrastructure/nginx
    image: nginx
    container_name: nginx
    ports:
      - "443:443"
    volumes:
      - ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
    networks:
      - transcendence
    restart: unless-stopped

  frontend:
    build: ./Frontend
    image: frontend
    container_name: frontend
    expose:
      - "3000"
    volumes:
      - ./Frontend:/app
    networks:
      - transcendence
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped


  # elasticsearch:
  #   build: ./Infrastructure/elasticsearch
  #   image: elasticsearch
  #   container_name: elasticsearch
  #   expose:
  #     - "9200"
  #   volumes:
  #     - elasticsearch:/usr/share/elasticsearch/data
  #   env_file:
  #     - .env
  #   networks:
  #     - transcendence
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:9200"]
  #     interval: 5s
  #     timeout: 5s
  #     retries: 5


volumes:
  # backend:
  #   name: backend
  postgres:
    name: postgres
  ssl: 
    name: ssl
  blockchain:
    name: blockchain/database
  # elasticsearch:
  #   name: elasticsearch



networks:
  transcendence:
    name: transcendence
    driver: bridge
    